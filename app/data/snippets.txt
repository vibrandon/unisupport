# Drop the database if you need to clean it out before recreating it:
db.drop_all()

# Create the DB and all tables
    db.create_all()

# Create some User objects
u1 = User(username='amy', email='a@b.com', role="Admin")
u1.set_password('amy.pw')
u2 = User(username='tom', email='t@b.com')
u2.set_password('tom.pw')
u3 = User(username='yin', email='y@b.com', role="Admin")
u3.set_password('yin.pw')
u4 = User(username='tariq', email='tariq@b.com')
u4.set_password('tariq.pw')
u5 = User(username='jo', email='jo@b.com')
u5.set_password('jo.pw')

# Add all new objects to the DB session and commit them
db.session.add_all([u1, u2, u3, u4, u5])
db.session.commit()





# Alternative way of adding new objects to the session
db.session.add(u1)
db.session.add(u2)
db.session.add(u3)
db.session.add(u4)
db.session.add(u5)
db.session.commit()

# After the commit, the id fields have been set:
u1
u2
u3

# Delete all tables, but not the DB
# db.drop_all()

# Objects read from the database are already in
# the session and don't need to be added
user = db.session.get(User, 1)
user
user.email='new@b.com'
user
db.session.commit()
user = db.session.get(User, 1)
user


# If something goes wrong, undo any changes made by
# rolling back the current transaction
db.session.rollback()


# Deleting an object
u = db.session.get(User, 3)
print(u)
db.session.delete(u)
db.session.commit()  
u=db.session.get(User, 3)
print(u)

# Adding back the object just deleted
u3 = User(username='yin', email='y@b.com')
u3.set_password('yin.pw')
db.session.add(u3)
db.session.commit()


# Queries
q = db.select(User)
results = db.session.execute(q)
results.all()


q=db.select(User.username, User.email)
db.session.execute(q).all()
db.session.execute(q).first()

q=db.select(User.username, User.email).where(User.username=='amy')
db.session.execute(q).one()
db.session.execute(q).one_or_none()


q = db.select(User)
db.session.scalars(q).all()

q=db.select(User.username, User.email)
db.session.scalar(q)

q=db.select(User.username, User.email).where(User.username=='amy')
db.session.scalars(q).all()
db.session.scalars(q).first()
db.session.scalars(q).one()
db.session.scalars(q).one_or_none()


#flask shell commands
from app import debug_utils
debug_utils.reset_db()
debug_utils.seed_products_and_reviews()
